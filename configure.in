dnl
dnl Copyright (C) 2010 Kazuyoshi Aizawa. All rights reserved.                     
dnl                                                                               
dnl Redistribution and use in source and binary forms, with or without            
dnl modification, are permitted provided that the following conditions            
dnl are met:                                                                      
dnl                                                                               
dnl 1. Redistributions of source code must retain the above copyright             
dnl   notice, this list of conditions and the following disclaimer.               
dnl 2. Redistributions in binary form must reproduce the above copyright          
dnl   notice, this list of conditions and the following disclaimer in the         
dnl   documentation and/or other materials provided with the distribution.        
dnl                                                                               
dnl THIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS ``AS IS'' AND            
dnl ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE         
dnl IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE    
dnl ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE           
dnl FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL    
dnl DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS       
dnl OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)         
dnl HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT    
dnl LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY     
dnl OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF        
dnl SUCH DAMAGE.                                                                  
dnl
dnl configure file for brdg
dnl
AC_INIT
AC_PROG_CC
AC_CHECK_PROG(ISAINFO, isainfo, yes, not found. assuming 32bit, /usr/bin)
if test "$ISAINFO" = "yes" ;
then
    KARCH=`/usr/bin/isainfo -k`
else
    KARCH=`uname -p`
fi
IS_GNU_LD=`ld --version 2>&1 | grep  GNU`
if test "$GCC" = yes; then
        CFLAGS="$CFLAGS -Wall"
fi

AC_CHECK_PROG(UNAME, uname, yes, not found, /usr/bin)
AC_CHECK_PROG(CUT, cut, yes, not found, /usr/bin)
if test "$UNAME" = "yes" -a "$CUT" = "yes" ; 
then 
    VERSION=`/usr/bin/uname -r`
    MAJOR_VERSION=`echo "$VERSION" |/usr/bin/cut -f 1 -d .`
    MINOR_VERSION=`echo "$VERSION" |/usr/bin/cut -f 2 -d .`
else
    exit
fi

case $KARCH in
     'sparc' | 'i386')
	DRV_PATH="/kernel/drv"
	MOD_PATH="/kernel/strmod"
        ;;
      'sparcv9')
        KCFLAGS="$KCFLAGS -m64"
	DRV_PATH="/kernel/drv/sparcv9"
	MOD_PATH="/kernel/strmod/sparcv9"
        if test -n "$IS_GNU_LD";
        then
                LD_OPT="-melf64_sparc"
        fi
        ;;
      'amd64')
	if test "$GCC" = yes; then
            KCFLAGS="$KCFLAGS -m64 -mcmodel=kernel -mno-red-zone"
        else
            KCFLAGS="$KCFLAGS -m64 -xmodel=kernel"
        fi
	DRV_PATH="/kernel/drv/amd64"
	MOD_PATH="/kernel/strmod/amd64"
        if test -n "$IS_GNU_LD";
        then
                LD_OPT="-melf_x86_64"
        fi
        ;;
esac

if test $MINOR_VERSION -gt 9 ; then
	KCFLAGS="$KCFLAGS -DSOL10"
fi
	

AC_ARG_ENABLE(debug,[  --enable-debug         Enable Debuging])
if test "$enable_debug" = "yes"; then
  CFLAGS="$CFLAGS -DDEBUG"
  KCFLAGS="$KCFLAGS -DDEBUG"
fi
AC_SUBST(CC)
AC_SUBST(KCFLAGS)
AC_SUBST(DRV_PATH)
AC_SUBST(MOD_PATH)
AC_SUBST(CFLAGS)
AC_SUBST(LD_OPT)
AC_OUTPUT(Makefile)
